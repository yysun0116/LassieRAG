[tool.poetry]
name = "LassieRAG"
version = "0.2.1"
description = "RAG-related functions based on LlamaIndex"
readme = "README.md"
packages = [{include = "lassie"}]

[tool.poetry.dependencies]
python = "^3.12"
llama-index = "^0.12.0"
llama-index-embeddings-huggingface = "^0.4.0"
llama-index-llms-huggingface = "^0.4.0"
llama-index-vector-stores-opensearch = "^0.5.0"
llama-index-llms-azure-openai = "^0.3.1"
llama-index-embeddings-azure-openai = "^0.3.0"
llama-index-llms-openai-like = "^0.3.4"
docx2txt = "^0.8"
transformers = "^4.44.2"
bitsandbytes =  "^0.42.0"
pydantic = "^2.8.2"
qdrant-client = "^1.11.1"
torch = "2.2.1"
pysbd = "^0.3.4"
sentencepiece = "^0.2.0"
python-dotenv = "^1.0.1"
mlflow = "2.9.0"
boto3 = "^1.34.152"
seaborn = "^0.13.2"
pyyaml = "^6.0.2"
nltk = "^3.9.1"
python-levenshtein = "^0.26.1"
setuptools = "^80.0.0"
langchain = "^0.3.25"


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
isort = "^5.13.2"
pytest = "^8.3.3"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
pylint = "^3.3.1"
coverage = "^7.6.4"
pytest-asyncio = "^0.24.0"

[tool.setuptools.packages.find]
where = ["."]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
(
  /\.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100

[tool.pylint.master]
load-plugins = "pylint.extensions.docparams"
ignore = ["build", "dist", ".venv"]
max-line-length = 100

[tool.pylint.messages_control]
disable = [
  "C0114", # missing-module-docstring
  "C0115", # missing-class-docstring
  "C0116", # missing-function-docstring
]